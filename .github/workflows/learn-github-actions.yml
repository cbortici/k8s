name: Terraform Run
run-name: Terraform action is ${{ inputs.action }}
on: 
  workflow_dispatch:
    inputs:
      access_id:
        description: 'access id token'     
        required: true
        default: 'input access id token'
      secret_id:
        description: 'secret id token'     
        required: true
        default: 'input secret id token' 
      action:
        type: choice
        description: Choose terraform action
        options: 
        - plan
        - apply
        - destroy
        default: 'plan'
jobs:
  terraformrun:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: hashicorp/setup-terraform@v3   
      - name: Auth
        id: auth
        run: |
            MY_SECRET=$(cat $GITHUB_EVENT_PATH | jq '.inputs.secret_id' | sed 's/"//g' )
            MY_ID=$(cat $GITHUB_EVENT_PATH | jq '.inputs.access_id' | sed 's/"//g' )
            echo "::add-mask::$MY_SECRET"
            echo "::add-mask::$MY_ID"
            echo "secretID=$MY_SECRET" >> $GITHUB_OUTPUT
            echo "accessID=$MY_ID" >> $GITHUB_OUTPUT
      - name: Terraform Init
        id: init
        run: terraform init
      - name: Terraform Validate
        id: validate
        run: terraform validate -no-color
      - name: Terraform ${{ inputs.action }}
        id: infrastructure
        run: |
            export AWS_ACCESS_KEY_ID=${{ steps.auth.outputs.accessID }}
            export AWS_SECRET_ACCESS_KEY=${{ steps.auth.outputs.secretID }}
            export AWS_REGION='eu-north-1'
            if [[ ${{ inputs.action }} == "plan" ]];
            then
            terraform ${{ inputs.action }}
            else
            terraform ${{ inputs.action }} --auto-approve
        continue-on-error: true