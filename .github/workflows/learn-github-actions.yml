name: learn-github-actions
run-name: ${{ github.actor }} is learning GitHub Actions
on: 
  workflow_dispatch:
    inputs:
      access_id:
        description: 'access id token'     
        required: true
        default: 'input access id token'
      secret_id:
        description: 'secret id token'     
        required: true
        default: 'input secret id token' 


jobs:
  terraformrun:
    runs-on: ubuntu-latest
    # environment: 
    #   name: test
    steps:
      - uses: actions/checkout@v4
      - uses: hashicorp/setup-terraform@v3
      
      - name: Auth
        id: auth
        # env:
        #   id: ${{ secrets.ID }}
        #   secret: ${{ secrets.SECRET }}
        run: |
            MY_SECRET=$(cat $GITHUB_EVENT_PATH | jq '.inputs.secret_id' | sed 's/"//g' )
            MY_ID=$(cat $GITHUB_EVENT_PATH | jq '.inputs.access_id' | sed 's/"//g' )
            echo "::add-mask::$MY_SECRET"
            echo "::add-mask::$MY_ID"
            echo "accessID=$MY_SECRET" >> $GITHUB_OUTPUT
            echo "secretID=$MY_ID" >> $GITHUB_OUTPUT

            # export AWS_ACCESS_KEY_ID=$MY_ID
            # export AWS_SECRET_ACCESS_KEY=$MY_SECRET
            # export AWS_REGION="eu-north-1"


      - name: Terraform Init
        id: init
        run: terraform init

      - name: Terraform Validate
        id: validate
        run: terraform validate -no-color

      - name: Terraform Plan
        # env:
        #   id: ${{ secrets.ID }}
        #   secret: ${{ secrets.SECRET }}
        id: plan
        run: |
            # MY_SECRET=$(cat $GITHUB_EVENT_PATH | jq '.inputs.secret_id' | sed 's/"//g' )
            # MY_ID=$(cat $GITHUB_EVENT_PATH | jq '.inputs.access_id' | sed 's/"//g' )
            # echo "::add-mask::$MY_SECRET"
            # echo "::add-mask::$MY_ID"
            export AWS_ACCESS_KEY_ID=${{ steps.auth.outputs.accessID }}
            export AWS_SECRET_ACCESS_KEY=${{ steps.auth.outputs.secretID }}
            export AWS_REGION="eu-north-1"
            terraform plan
        continue-on-error: true
